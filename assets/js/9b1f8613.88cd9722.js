"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[1989],{711:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var s=i(4848),o=i(8453);const r={sidebar_position:3,title:"iv-functions"},t="iv-viewer Functions and Methods",d={id:"iv-viewer/iv-functions",title:"iv-functions",description:"_",source:"@site/docs/iv-viewer/iv-functions.md",sourceDirName:"iv-viewer",slug:"/iv-viewer/iv-functions",permalink:"/iv-viewer/docs/iv-viewer/iv-functions",draft:!1,unlisted:!1,editUrl:"https://github.com/s-yadav/iv-viewer/edit/master/documentation/docs/iv-viewer/iv-functions.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"iv-functions"},sidebar:"tutorialSidebar",previous:{title:"props",permalink:"/iv-viewer/docs/iv-viewer/props"},next:{title:"Readme All in One",permalink:"/iv-viewer/docs/iv-viewer/"}},c={},a=[{value:"Creating an Instance",id:"creating-an-instance",level:2},{value:"Instance Methods",id:"instance-methods",level:2},{value:"<code>load(imgSrc, highResImg)</code>",id:"loadimgsrc-highresimg",level:3},{value:"<code>zoom(zoomValue, point)</code>",id:"zoomzoomvalue-point",level:3},{value:"<code>resetZoom()</code>",id:"resetzoom",level:3},{value:"<code>refresh()</code>",id:"refresh",level:3},{value:"<code>destroy()</code>",id:"destroy",level:3},{value:"FullScreenViewer Methods",id:"fullscreenviewer-methods",level:2},{value:"<code>show(imgSrc, highResImg)</code>",id:"showimgsrc-highresimg",level:3},{value:"<code>hide()</code>",id:"hide",level:3}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"iv-viewer-functions-and-methods",children:"iv-viewer Functions and Methods"}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"creating-an-instance",children:"Creating an Instance"}),"\n",(0,s.jsxs)(n.p,{children:["To create an instance of ",(0,s.jsx)(n.code,{children:"ImageViewer"}),", you need to provide an element and optional configuration options. The element can be a container where the viewer will be loaded, or an image element for initializing in image mode."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"import ImageViewer from 'iv-viewer';\r\n\r\nconst viewer = new ImageViewer(element, options);\n"})}),"\n",(0,s.jsx)(n.p,{children:"You can also pass a selector directly instead of a DOM element."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"const viewer = new ImageViewer('#element', options);\n"})}),"\n",(0,s.jsx)(n.h2,{id:"instance-methods",children:"Instance Methods"}),"\n",(0,s.jsx)(n.h3,{id:"loadimgsrc-highresimg",children:(0,s.jsx)(n.code,{children:"load(imgSrc, highResImg)"})}),"\n",(0,s.jsx)(n.p,{children:"Load an image into the viewer. You can pass two different resolutions of the image as the first and second arguments (optional)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer.load('image.png', 'hi-res-image.png');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"zoomzoomvalue-point",children:(0,s.jsx)(n.code,{children:"zoom(zoomValue, point)"})}),"\n",(0,s.jsx)(n.p,{children:"Zoom the image to a specific value."}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"zoomValue"}),": A percentage value to which you want to zoom the image."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"point (optional)"}),": Coordinates x and y in the container to act as the center for the zoom. If not defined, the center of the container is used."]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer.zoom(300, { x: 500, y: 500 });\n"})}),"\n",(0,s.jsx)(n.h3,{id:"resetzoom",children:(0,s.jsx)(n.code,{children:"resetZoom()"})}),"\n",(0,s.jsx)(n.p,{children:"Reset the zoom to the default or provided initial 'zoomValue'."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer.refresh();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"refresh",children:(0,s.jsx)(n.code,{children:"refresh()"})}),"\n",(0,s.jsx)(n.p,{children:"Manually refresh the viewer. This resets the zoom and pan, and recalculates the dimensions of the container, window, and image."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer.refresh();\n"})}),"\n",(0,s.jsx)(n.h3,{id:"destroy",children:(0,s.jsx)(n.code,{children:"destroy()"})}),"\n",(0,s.jsxs)(n.p,{children:["Destroy the plugin instance and unbind all events. It also resets the container or the image (if ",(0,s.jsx)(n.code,{children:"ImageViewer"})," is used in image mode). Returns ",(0,s.jsx)(n.code,{children:"null"}),", which you should assign to the viewer variable to free up memory."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer = viewer.destroy();\n"})}),"\n",(0,s.jsx)(n.h2,{id:"fullscreenviewer-methods",children:"FullScreenViewer Methods"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.code,{children:"FullScreenViewer"})," extends from ",(0,s.jsx)(n.code,{children:"ImageViewer"}),", so it inherits all instance methods of ",(0,s.jsx)(n.code,{children:"ImageViewer"})," and adds additional methods for full-screen mode."]}),"\n",(0,s.jsx)(n.h3,{id:"showimgsrc-highresimg",children:(0,s.jsx)(n.code,{children:"show(imgSrc, highResImg)"})}),"\n",(0,s.jsx)(n.p,{children:"Show the full-screen viewer with the specified image. You can pass two different resolutions of the image as the first and second arguments (optional)."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer.show('image.png', 'hi-res-image.png');\n"})}),"\n",(0,s.jsx)(n.h3,{id:"hide",children:(0,s.jsx)(n.code,{children:"hide()"})}),"\n",(0,s.jsx)(n.p,{children:"Hide or close the full-screen viewer."}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-js",children:"viewer.hide();\n"})}),"\n",(0,s.jsxs)(n.p,{children:["This Markdown provides a comprehensive overview of the functions and methods available in ",(0,s.jsx)(n.code,{children:"iv-viewer"}),", covering instance creation, method usage, options, listeners, and callback data."]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>d});var s=i(6540);const o={},r=s.createContext(o);function t(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);