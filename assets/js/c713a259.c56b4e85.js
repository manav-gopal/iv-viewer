"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[90],{468:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>d,default:()=>a,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var i=n(4848),r=n(8453);const s={sidebar_position:2,title:"props"},d="Props",l={id:"iv-viewer/props",title:"props",description:"_",source:"@site/docs/iv-viewer/props.md",sourceDirName:"iv-viewer",slug:"/iv-viewer/props",permalink:"/iv-viewer/docs/iv-viewer/props",draft:!1,unlisted:!1,editUrl:"https://github.com/s-yadav/iv-viewer/edit/master/documentation/docs/iv-viewer/props.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,title:"props"},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/iv-viewer/docs/iv-viewer/intro-iv"},next:{title:"iv-functions",permalink:"/iv-viewer/docs/iv-viewer/iv-functions"}},o={},c=[{value:"Options",id:"options",level:3},{value:"The Listeners",id:"the-listeners",level:3},{value:"Callback Data",id:"callback-data",level:3}];function h(e){const t={code:"code",h1:"h1",h3:"h3",hr:"hr",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"props",children:"Props"}),"\n",(0,i.jsx)(t.hr,{}),"\n",(0,i.jsx)(t.p,{children:"Option that are used in the fullscreen mode and inlined mode."}),"\n",(0,i.jsx)(t.h3,{id:"options",children:"Options"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Option"}),(0,i.jsx)(t.th,{children:"Allowed Value"}),(0,i.jsx)(t.th,{children:"Default"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"zoomValue"}),(0,i.jsx)(t.td,{children:"number in percentage"}),(0,i.jsx)(t.td,{children:"100"}),(0,i.jsx)(t.td,{children:"It defines the initial zoom value of the image."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"maxZoom"}),(0,i.jsx)(t.td,{children:"number in percentage"}),(0,i.jsx)(t.td,{children:"500"}),(0,i.jsx)(t.td,{children:"It defines the max limit for the zoom value of the image."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"snapView"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"If true will show snap view."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"refreshOnResize"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Defines whether to refresh the viewer on resize of window. This is available only for Container and Image mode. On FullScreen mode it will refresh on window resize by default."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"zoomOnMouseWheel"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Defines weather to allow zoom with mouse scroll or not."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"hasZoomButtons"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"true"}),(0,i.jsx)(t.td,{children:"Defines weather to add zoom buttons or not"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"zoomStep"}),(0,i.jsx)(t.td,{children:"number"}),(0,i.jsx)(t.td,{children:"50"}),(0,i.jsx)(t.td,{children:"The number of which the zoom should increase/decrease when the buttons are clicked"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"listeners"}),(0,i.jsx)(t.td,{children:"object"}),(0,i.jsx)(t.td,{children:"null"}),(0,i.jsx)(t.td,{children:"multiple useful callbacks that could use in-order to get the current state of the viewer"})]})]})]}),"\n",(0,i.jsx)(t.h3,{id:"the-listeners",children:"The Listeners"}),"\n",(0,i.jsx)(t.p,{children:"There are multiple listeners you can register with each viewer instance"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-js",children:"import ImageViewer from 'iv-viewer';\n\nconst viewer = new ImageViewer(element, { \n  listeners: { \n    onInit: callback(data), // called when the instance is initiated \n    onDestroy: callback(), // called when the instance is destroyed\n    onImageLoaded: callback(data), // called on image load\n    onZoomChange: callback(data), // called on zoom in/out\n  } \n});\n"})}),"\n",(0,i.jsx)(t.h3,{id:"callback-data",children:"Callback Data"}),"\n",(0,i.jsx)(t.p,{children:"The data passed to each callback is very useful, it contains the current instance with more info that you can use to react to the instance state"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Option"}),(0,i.jsx)(t.th,{children:"dataType"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"container"}),(0,i.jsx)(t.td,{children:"HTMLElement"}),(0,i.jsx)(t.td,{children:"The current container of the viewer"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"snapView"}),(0,i.jsx)(t.td,{children:"HTMLElement"}),(0,i.jsx)(t.td,{children:"The snap view element in the viewer"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"zoomValue"}),(0,i.jsx)(t.td,{children:"Number"}),(0,i.jsx)(t.td,{children:"The current zoom value"})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"reachedMin"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"A boolean value that determine if the zoom value reached the initial zoom."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"reachedMax"}),(0,i.jsx)(t.td,{children:"boolean"}),(0,i.jsx)(t.td,{children:"A boolean value that determine if the zoom value reached the maximum zoom."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"instance"}),(0,i.jsx)(t.td,{children:"ImageViewer"}),(0,i.jsx)(t.td,{children:"The current instance which contains all other info if needed"})]})]})]})]})}function a(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>d,x:()=>l});var i=n(6540);const r={},s=i.createContext(r);function d(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);